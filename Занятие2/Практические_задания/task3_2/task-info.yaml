type: theory
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 222
    length: 86
    placeholder_text: '# TODO зафиксировать время до начала выполнения функции'
    initial_state:
      length: 55
      offset: 222
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: t0 = time.time()
  - offset: 468
    length: 79
    placeholder_text: '# TODO зафиксировать время после выполнения'
    initial_state:
      length: 43
      offset: 323
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: |-
      dt = time.time() - t0
              print(f"Функция выполнялась {dt}")
  - offset: 665
    length: 41
    placeholder_text: '# TODO задекорировать функцию'
    initial_state:
      length: 29
      offset: 484
    initialized_from_dependency: false
    selected: true
    status: Solved
    encrypted_possible_answer: '@time_decorator'
  text: |
    import time


    def time_decorator(fn):
        print("Этот код будет выведен в момент декорирования функции")

        def wrapper(*args, **kwargs):
            print("Этот код будет выполняться перед каждым вызовом функции")

            # TODO зафиксировать время до начала выполнения функции
            result = fn(*args, **kwargs)
            # TODO зафиксировать время после выполнения

            print("Этот код будет выполняться после каждого вызова функции")
            return result
        return wrapper


    # TODO задекорировать функцию
    def pow_(a, n):
        return pow(a, n)


    if __name__ == "__main__":
        print(pow_)
        print("=" * 25)

        print(pow_(5, 2))
        print("=" * 25)

        print(pow_(4, 4))
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
status: Solved
feedback:
  time: Thu, 28 Apr 2022 16:04:37 UTC
record: -1
post_submission_on_open: true
